//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MEW.EMS.API.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MEW_EMS_Entities : DbContext
    {
        public MEW_EMS_Entities()
            : base("name=MEW_EMS_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MainMenu> MainMenus { get; set; }
        public virtual DbSet<SubMenu> SubMenus { get; set; }
        public virtual DbSet<SubMenuRole> SubMenuRoles { get; set; }
        public virtual DbSet<SystemLanguage> SystemLanguages { get; set; }
        public virtual DbSet<RoleFunction> RoleFunctions { get; set; }
        public virtual DbSet<SystemRoleFunction> SystemRoleFunctions { get; set; }
        public virtual DbSet<SystemRole> SystemRoles { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<V_SystemUserFilter> V_SystemUserFilter { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<MasterAllowanceType> MasterAllowanceTypes { get; set; }
        public virtual DbSet<MasterAnnualEvaluation> MasterAnnualEvaluations { get; set; }
        public virtual DbSet<MasterBudgetType> MasterBudgetTypes { get; set; }
        public virtual DbSet<MasterContractType> MasterContractTypes { get; set; }
        public virtual DbSet<MasterDepartment> MasterDepartments { get; set; }
        public virtual DbSet<MasterDesignation> MasterDesignations { get; set; }
        public virtual DbSet<MasterFunctionalGroup> MasterFunctionalGroups { get; set; }
        public virtual DbSet<MasterGrade> MasterGrades { get; set; }
        public virtual DbSet<MasterJobDegree> MasterJobDegrees { get; set; }
        public virtual DbSet<MasterJobDescription> MasterJobDescriptions { get; set; }
        public virtual DbSet<MasterJobLevel> MasterJobLevels { get; set; }
        public virtual DbSet<MasterNationality> MasterNationalities { get; set; }
        public virtual DbSet<MasterProgram> MasterPrograms { get; set; }
        public virtual DbSet<MasterQualification> MasterQualifications { get; set; }
        public virtual DbSet<MasterReasonForPromotion> MasterReasonForPromotions { get; set; }
        public virtual DbSet<MasterReasonForRetirement> MasterReasonForRetirements { get; set; }
        public virtual DbSet<MasterSector> MasterSectors { get; set; }
        public virtual DbSet<MasterSocialStatu> MasterSocialStatus { get; set; }
        public virtual DbSet<MasterVacationType> MasterVacationTypes { get; set; }
        public virtual DbSet<MasterJobTitle> MasterJobTitles { get; set; }
        public virtual DbSet<PersonalPromotion> PersonalPromotions { get; set; }
        public virtual DbSet<PersonalQualification> PersonalQualifications { get; set; }
        public virtual DbSet<V_PersonalDataSearch> V_PersonalDataSearch { get; set; }
        public virtual DbSet<MasterWorkPlace> MasterWorkPlaces { get; set; }
        public virtual DbSet<PersonalPriorExperience> PersonalPriorExperiences { get; set; }
        public virtual DbSet<PersonalData> PersonalDatas { get; set; }
        public virtual DbSet<PersonalChangeJobTitle> PersonalChangeJobTitles { get; set; }
        public virtual DbSet<V_PersonalPriorExperience> V_PersonalPriorExperience { get; set; }
        public virtual DbSet<V_PersonalPromotion> V_PersonalPromotion { get; set; }
        public virtual DbSet<V_PersonalQualification> V_PersonalQualification { get; set; }
        public virtual DbSet<V_PersonalChangeJobTitle> V_PersonalChangeJobTitle { get; set; }
        public virtual DbSet<TmpBonu> TmpBonus { get; set; }
        public virtual DbSet<PersonalAnnualEvaluation> PersonalAnnualEvaluations { get; set; }
        public virtual DbSet<BonusValidation> BonusValidations { get; set; }
        public virtual DbSet<V_BonusAmountMapping> V_BonusAmountMapping { get; set; }
        public virtual DbSet<BonusAmountMapping> BonusAmountMappings { get; set; }
        public virtual DbSet<SystemConfiguration> SystemConfigurations { get; set; }
        public virtual DbSet<BonusAdjustment> BonusAdjustments { get; set; }
        public virtual DbSet<SystemGender> SystemGenders { get; set; }
        public virtual DbSet<ColumnSelector> ColumnSelectors { get; set; }
        public virtual DbSet<V_PersonalAnnualEvaluation> V_PersonalAnnualEvaluation { get; set; }
        public virtual DbSet<V_BonusEligibleList> V_BonusEligibleList { get; set; }
        public virtual DbSet<Bonu> Bonus { get; set; }
        public virtual DbSet<V_BonusList> V_BonusList { get; set; }
        public virtual DbSet<PersonalInternalTransfer> PersonalInternalTransfers { get; set; }
        public virtual DbSet<CustomReportSelection> CustomReportSelections { get; set; }
        public virtual DbSet<V_BonusReport> V_BonusReport { get; set; }
    
        public virtual int xsp_LeaveReport(string status, Nullable<int> leaveTypeId, string fileNo, string name, string civilId, Nullable<bool> delayed, Nullable<bool> returned, Nullable<bool> notReturned, Nullable<System.DateTime> leaveFrom, Nullable<System.DateTime> leaveTo)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var leaveTypeIdParameter = leaveTypeId.HasValue ?
                new ObjectParameter("LeaveTypeId", leaveTypeId) :
                new ObjectParameter("LeaveTypeId", typeof(int));
    
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var civilIdParameter = civilId != null ?
                new ObjectParameter("CivilId", civilId) :
                new ObjectParameter("CivilId", typeof(string));
    
            var delayedParameter = delayed.HasValue ?
                new ObjectParameter("Delayed", delayed) :
                new ObjectParameter("Delayed", typeof(bool));
    
            var returnedParameter = returned.HasValue ?
                new ObjectParameter("Returned", returned) :
                new ObjectParameter("Returned", typeof(bool));
    
            var notReturnedParameter = notReturned.HasValue ?
                new ObjectParameter("NotReturned", notReturned) :
                new ObjectParameter("NotReturned", typeof(bool));
    
            var leaveFromParameter = leaveFrom.HasValue ?
                new ObjectParameter("LeaveFrom", leaveFrom) :
                new ObjectParameter("LeaveFrom", typeof(System.DateTime));
    
            var leaveToParameter = leaveTo.HasValue ?
                new ObjectParameter("LeaveTo", leaveTo) :
                new ObjectParameter("LeaveTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xsp_LeaveReport", statusParameter, leaveTypeIdParameter, fileNoParameter, nameParameter, civilIdParameter, delayedParameter, returnedParameter, notReturnedParameter, leaveFromParameter, leaveToParameter);
        }
    
        public virtual ObjectResult<xsp_LeaveChart_Result> xsp_LeaveChart(string userId, Nullable<int> year)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xsp_LeaveChart_Result>("xsp_LeaveChart", userIdParameter, yearParameter);
        }
    
        public virtual int xsp_FilterLeave(Nullable<int> year, string status, Nullable<int> leaveTypeId, string userId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var leaveTypeIdParameter = leaveTypeId.HasValue ?
                new ObjectParameter("LeaveTypeId", leaveTypeId) :
                new ObjectParameter("LeaveTypeId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xsp_FilterLeave", yearParameter, statusParameter, leaveTypeIdParameter, userIdParameter);
        }
    
        public virtual int xsp_LeaveHeader(Nullable<int> year, string status, Nullable<int> leaveTypeId, string userId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var leaveTypeIdParameter = leaveTypeId.HasValue ?
                new ObjectParameter("LeaveTypeId", leaveTypeId) :
                new ObjectParameter("LeaveTypeId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xsp_LeaveHeader", yearParameter, statusParameter, leaveTypeIdParameter, userIdParameter);
        }
    
        public virtual int xsp_FilterSystemUsers(string fileNo, string name, string civilId)
        {
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var civilIdParameter = civilId != null ?
                new ObjectParameter("CivilId", civilId) :
                new ObjectParameter("CivilId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xsp_FilterSystemUsers", fileNoParameter, nameParameter, civilIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spSearchPersonalDataId(Nullable<int> articleNo, Nullable<int> genderId, Nullable<int> masterDepartmentId, Nullable<int> masterJobDegreeId, Nullable<int> masterFunctionalGroupId, Nullable<int> masterDesignationId, Nullable<int> masterJobTitleId, Nullable<int> masterJobDescriptionId, Nullable<int> masterNationalityId, Nullable<int> masterBudgetTypeId, Nullable<int> masterJobLevelId, Nullable<int> nextJobLevelId, Nullable<int> masterGradeId, Nullable<int> nextGradeId, Nullable<int> masterReasonForRetirementId, Nullable<System.DateTime> dateBirth, Nullable<System.DateTime> dateJoin, string fileNo, string name, string notes, string phoneNo, string civilIdNo)
        {
            var articleNoParameter = articleNo.HasValue ?
                new ObjectParameter("ArticleNo", articleNo) :
                new ObjectParameter("ArticleNo", typeof(int));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var masterDepartmentIdParameter = masterDepartmentId.HasValue ?
                new ObjectParameter("MasterDepartmentId", masterDepartmentId) :
                new ObjectParameter("MasterDepartmentId", typeof(int));
    
            var masterJobDegreeIdParameter = masterJobDegreeId.HasValue ?
                new ObjectParameter("MasterJobDegreeId", masterJobDegreeId) :
                new ObjectParameter("MasterJobDegreeId", typeof(int));
    
            var masterFunctionalGroupIdParameter = masterFunctionalGroupId.HasValue ?
                new ObjectParameter("MasterFunctionalGroupId", masterFunctionalGroupId) :
                new ObjectParameter("MasterFunctionalGroupId", typeof(int));
    
            var masterDesignationIdParameter = masterDesignationId.HasValue ?
                new ObjectParameter("MasterDesignationId", masterDesignationId) :
                new ObjectParameter("MasterDesignationId", typeof(int));
    
            var masterJobTitleIdParameter = masterJobTitleId.HasValue ?
                new ObjectParameter("MasterJobTitleId", masterJobTitleId) :
                new ObjectParameter("MasterJobTitleId", typeof(int));
    
            var masterJobDescriptionIdParameter = masterJobDescriptionId.HasValue ?
                new ObjectParameter("MasterJobDescriptionId", masterJobDescriptionId) :
                new ObjectParameter("MasterJobDescriptionId", typeof(int));
    
            var masterNationalityIdParameter = masterNationalityId.HasValue ?
                new ObjectParameter("MasterNationalityId", masterNationalityId) :
                new ObjectParameter("MasterNationalityId", typeof(int));
    
            var masterBudgetTypeIdParameter = masterBudgetTypeId.HasValue ?
                new ObjectParameter("MasterBudgetTypeId", masterBudgetTypeId) :
                new ObjectParameter("MasterBudgetTypeId", typeof(int));
    
            var masterJobLevelIdParameter = masterJobLevelId.HasValue ?
                new ObjectParameter("MasterJobLevelId", masterJobLevelId) :
                new ObjectParameter("MasterJobLevelId", typeof(int));
    
            var nextJobLevelIdParameter = nextJobLevelId.HasValue ?
                new ObjectParameter("NextJobLevelId", nextJobLevelId) :
                new ObjectParameter("NextJobLevelId", typeof(int));
    
            var masterGradeIdParameter = masterGradeId.HasValue ?
                new ObjectParameter("MasterGradeId", masterGradeId) :
                new ObjectParameter("MasterGradeId", typeof(int));
    
            var nextGradeIdParameter = nextGradeId.HasValue ?
                new ObjectParameter("NextGradeId", nextGradeId) :
                new ObjectParameter("NextGradeId", typeof(int));
    
            var masterReasonForRetirementIdParameter = masterReasonForRetirementId.HasValue ?
                new ObjectParameter("MasterReasonForRetirementId", masterReasonForRetirementId) :
                new ObjectParameter("MasterReasonForRetirementId", typeof(int));
    
            var dateBirthParameter = dateBirth.HasValue ?
                new ObjectParameter("DateBirth", dateBirth) :
                new ObjectParameter("DateBirth", typeof(System.DateTime));
    
            var dateJoinParameter = dateJoin.HasValue ?
                new ObjectParameter("DateJoin", dateJoin) :
                new ObjectParameter("DateJoin", typeof(System.DateTime));
    
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var civilIdNoParameter = civilIdNo != null ?
                new ObjectParameter("CivilIdNo", civilIdNo) :
                new ObjectParameter("CivilIdNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spSearchPersonalDataId", articleNoParameter, genderIdParameter, masterDepartmentIdParameter, masterJobDegreeIdParameter, masterFunctionalGroupIdParameter, masterDesignationIdParameter, masterJobTitleIdParameter, masterJobDescriptionIdParameter, masterNationalityIdParameter, masterBudgetTypeIdParameter, masterJobLevelIdParameter, nextJobLevelIdParameter, masterGradeIdParameter, nextGradeIdParameter, masterReasonForRetirementIdParameter, dateBirthParameter, dateJoinParameter, fileNoParameter, nameParameter, notesParameter, phoneNoParameter, civilIdNoParameter);
        }
    
        public virtual int spSearchPersonalData(Nullable<int> articleNo, Nullable<int> genderId, Nullable<int> masterDepartmentId, Nullable<int> masterJobDegreeId, Nullable<int> masterFunctionalGroupId, Nullable<int> masterDesignationId, Nullable<int> masterJobTitleId, Nullable<int> masterJobDescriptionId, Nullable<int> masterNationalityId, Nullable<int> masterBudgetTypeId, Nullable<int> masterJobLevelId, Nullable<int> nextJobLevelId, Nullable<int> masterGradeId, Nullable<int> nextGradeId, Nullable<int> masterReasonForRetirementId, Nullable<System.DateTime> dateBirth, Nullable<System.DateTime> dateJoin, string fileNo, string name, string notes, string phoneNo, string civilIdNo)
        {
            var articleNoParameter = articleNo.HasValue ?
                new ObjectParameter("ArticleNo", articleNo) :
                new ObjectParameter("ArticleNo", typeof(int));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var masterDepartmentIdParameter = masterDepartmentId.HasValue ?
                new ObjectParameter("MasterDepartmentId", masterDepartmentId) :
                new ObjectParameter("MasterDepartmentId", typeof(int));
    
            var masterJobDegreeIdParameter = masterJobDegreeId.HasValue ?
                new ObjectParameter("MasterJobDegreeId", masterJobDegreeId) :
                new ObjectParameter("MasterJobDegreeId", typeof(int));
    
            var masterFunctionalGroupIdParameter = masterFunctionalGroupId.HasValue ?
                new ObjectParameter("MasterFunctionalGroupId", masterFunctionalGroupId) :
                new ObjectParameter("MasterFunctionalGroupId", typeof(int));
    
            var masterDesignationIdParameter = masterDesignationId.HasValue ?
                new ObjectParameter("MasterDesignationId", masterDesignationId) :
                new ObjectParameter("MasterDesignationId", typeof(int));
    
            var masterJobTitleIdParameter = masterJobTitleId.HasValue ?
                new ObjectParameter("MasterJobTitleId", masterJobTitleId) :
                new ObjectParameter("MasterJobTitleId", typeof(int));
    
            var masterJobDescriptionIdParameter = masterJobDescriptionId.HasValue ?
                new ObjectParameter("MasterJobDescriptionId", masterJobDescriptionId) :
                new ObjectParameter("MasterJobDescriptionId", typeof(int));
    
            var masterNationalityIdParameter = masterNationalityId.HasValue ?
                new ObjectParameter("MasterNationalityId", masterNationalityId) :
                new ObjectParameter("MasterNationalityId", typeof(int));
    
            var masterBudgetTypeIdParameter = masterBudgetTypeId.HasValue ?
                new ObjectParameter("MasterBudgetTypeId", masterBudgetTypeId) :
                new ObjectParameter("MasterBudgetTypeId", typeof(int));
    
            var masterJobLevelIdParameter = masterJobLevelId.HasValue ?
                new ObjectParameter("MasterJobLevelId", masterJobLevelId) :
                new ObjectParameter("MasterJobLevelId", typeof(int));
    
            var nextJobLevelIdParameter = nextJobLevelId.HasValue ?
                new ObjectParameter("NextJobLevelId", nextJobLevelId) :
                new ObjectParameter("NextJobLevelId", typeof(int));
    
            var masterGradeIdParameter = masterGradeId.HasValue ?
                new ObjectParameter("MasterGradeId", masterGradeId) :
                new ObjectParameter("MasterGradeId", typeof(int));
    
            var nextGradeIdParameter = nextGradeId.HasValue ?
                new ObjectParameter("NextGradeId", nextGradeId) :
                new ObjectParameter("NextGradeId", typeof(int));
    
            var masterReasonForRetirementIdParameter = masterReasonForRetirementId.HasValue ?
                new ObjectParameter("MasterReasonForRetirementId", masterReasonForRetirementId) :
                new ObjectParameter("MasterReasonForRetirementId", typeof(int));
    
            var dateBirthParameter = dateBirth.HasValue ?
                new ObjectParameter("DateBirth", dateBirth) :
                new ObjectParameter("DateBirth", typeof(System.DateTime));
    
            var dateJoinParameter = dateJoin.HasValue ?
                new ObjectParameter("DateJoin", dateJoin) :
                new ObjectParameter("DateJoin", typeof(System.DateTime));
    
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var civilIdNoParameter = civilIdNo != null ?
                new ObjectParameter("CivilIdNo", civilIdNo) :
                new ObjectParameter("CivilIdNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSearchPersonalData", articleNoParameter, genderIdParameter, masterDepartmentIdParameter, masterJobDegreeIdParameter, masterFunctionalGroupIdParameter, masterDesignationIdParameter, masterJobTitleIdParameter, masterJobDescriptionIdParameter, masterNationalityIdParameter, masterBudgetTypeIdParameter, masterJobLevelIdParameter, nextJobLevelIdParameter, masterGradeIdParameter, nextGradeIdParameter, masterReasonForRetirementIdParameter, dateBirthParameter, dateJoinParameter, fileNoParameter, nameParameter, notesParameter, phoneNoParameter, civilIdNoParameter);
        }
    
        public virtual int spValidateBonus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateBonus");
        }
    
        public virtual int spUpdatePersonalAnnualEvaluationData(Nullable<int> year, Nullable<System.Guid> userId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatePersonalAnnualEvaluationData", yearParameter, userIdParameter);
        }
    
        public virtual int spSearchBonusData(Nullable<int> articleNo, Nullable<int> genderId, Nullable<int> masterDepartmentId, Nullable<int> masterJobDegreeId, Nullable<int> masterFunctionalGroupId, Nullable<int> masterDesignationId, Nullable<int> masterJobTitleId, Nullable<int> masterJobDescriptionId, Nullable<int> masterNationalityId, Nullable<int> masterBudgetTypeId, Nullable<int> masterJobLevelId, Nullable<int> nextJobLevelId, Nullable<int> masterGradeId, Nullable<int> nextGradeId, Nullable<int> masterReasonForRetirementId, Nullable<System.DateTime> dateBirth, Nullable<System.DateTime> dateJoin, string fileNo, string name, string notes, string phoneNo, string civilIdNo, Nullable<int> yearFrom, Nullable<int> yearTo)
        {
            var articleNoParameter = articleNo.HasValue ?
                new ObjectParameter("ArticleNo", articleNo) :
                new ObjectParameter("ArticleNo", typeof(int));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var masterDepartmentIdParameter = masterDepartmentId.HasValue ?
                new ObjectParameter("MasterDepartmentId", masterDepartmentId) :
                new ObjectParameter("MasterDepartmentId", typeof(int));
    
            var masterJobDegreeIdParameter = masterJobDegreeId.HasValue ?
                new ObjectParameter("MasterJobDegreeId", masterJobDegreeId) :
                new ObjectParameter("MasterJobDegreeId", typeof(int));
    
            var masterFunctionalGroupIdParameter = masterFunctionalGroupId.HasValue ?
                new ObjectParameter("MasterFunctionalGroupId", masterFunctionalGroupId) :
                new ObjectParameter("MasterFunctionalGroupId", typeof(int));
    
            var masterDesignationIdParameter = masterDesignationId.HasValue ?
                new ObjectParameter("MasterDesignationId", masterDesignationId) :
                new ObjectParameter("MasterDesignationId", typeof(int));
    
            var masterJobTitleIdParameter = masterJobTitleId.HasValue ?
                new ObjectParameter("MasterJobTitleId", masterJobTitleId) :
                new ObjectParameter("MasterJobTitleId", typeof(int));
    
            var masterJobDescriptionIdParameter = masterJobDescriptionId.HasValue ?
                new ObjectParameter("MasterJobDescriptionId", masterJobDescriptionId) :
                new ObjectParameter("MasterJobDescriptionId", typeof(int));
    
            var masterNationalityIdParameter = masterNationalityId.HasValue ?
                new ObjectParameter("MasterNationalityId", masterNationalityId) :
                new ObjectParameter("MasterNationalityId", typeof(int));
    
            var masterBudgetTypeIdParameter = masterBudgetTypeId.HasValue ?
                new ObjectParameter("MasterBudgetTypeId", masterBudgetTypeId) :
                new ObjectParameter("MasterBudgetTypeId", typeof(int));
    
            var masterJobLevelIdParameter = masterJobLevelId.HasValue ?
                new ObjectParameter("MasterJobLevelId", masterJobLevelId) :
                new ObjectParameter("MasterJobLevelId", typeof(int));
    
            var nextJobLevelIdParameter = nextJobLevelId.HasValue ?
                new ObjectParameter("NextJobLevelId", nextJobLevelId) :
                new ObjectParameter("NextJobLevelId", typeof(int));
    
            var masterGradeIdParameter = masterGradeId.HasValue ?
                new ObjectParameter("MasterGradeId", masterGradeId) :
                new ObjectParameter("MasterGradeId", typeof(int));
    
            var nextGradeIdParameter = nextGradeId.HasValue ?
                new ObjectParameter("NextGradeId", nextGradeId) :
                new ObjectParameter("NextGradeId", typeof(int));
    
            var masterReasonForRetirementIdParameter = masterReasonForRetirementId.HasValue ?
                new ObjectParameter("MasterReasonForRetirementId", masterReasonForRetirementId) :
                new ObjectParameter("MasterReasonForRetirementId", typeof(int));
    
            var dateBirthParameter = dateBirth.HasValue ?
                new ObjectParameter("DateBirth", dateBirth) :
                new ObjectParameter("DateBirth", typeof(System.DateTime));
    
            var dateJoinParameter = dateJoin.HasValue ?
                new ObjectParameter("DateJoin", dateJoin) :
                new ObjectParameter("DateJoin", typeof(System.DateTime));
    
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var civilIdNoParameter = civilIdNo != null ?
                new ObjectParameter("CivilIdNo", civilIdNo) :
                new ObjectParameter("CivilIdNo", typeof(string));
    
            var yearFromParameter = yearFrom.HasValue ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(int));
    
            var yearToParameter = yearTo.HasValue ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSearchBonusData", articleNoParameter, genderIdParameter, masterDepartmentIdParameter, masterJobDegreeIdParameter, masterFunctionalGroupIdParameter, masterDesignationIdParameter, masterJobTitleIdParameter, masterJobDescriptionIdParameter, masterNationalityIdParameter, masterBudgetTypeIdParameter, masterJobLevelIdParameter, nextJobLevelIdParameter, masterGradeIdParameter, nextGradeIdParameter, masterReasonForRetirementIdParameter, dateBirthParameter, dateJoinParameter, fileNoParameter, nameParameter, notesParameter, phoneNoParameter, civilIdNoParameter, yearFromParameter, yearToParameter);
        }
    }
}
